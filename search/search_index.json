{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Tugas MataKuliah Data Mining Biodata \u00b6 Nama : Rizaldi Febri Agil Prasetya NIM : 180411100085 KELAS : Penambangan Data 5-B Program Studi : Teknik Informatika Fakultas : Teknik Perguruan Tinggi : Universitas Trunojoyo Madura Dosen Pengampu : @mulaab Referensi : https://mulaab.github.io/datamining","title":"biodata"},{"location":"#welcome","text":"Tugas MataKuliah Data Mining","title":"Welcome"},{"location":"#biodata","text":"Nama : Rizaldi Febri Agil Prasetya NIM : 180411100085 KELAS : Penambangan Data 5-B Program Studi : Teknik Informatika Fakultas : Teknik Perguruan Tinggi : Universitas Trunojoyo Madura Dosen Pengampu : @mulaab Referensi : https://mulaab.github.io/datamining","title":"Biodata"},{"location":"MengukurJaral/","text":"Pengertian \u00b6 Disini kita akan belajar cara mengukur jarak data menggunakan beberapa cara atau metode Minkowski Distance \u00b6 Kelompk Minkowski diantaranya adalah Euclidean distance dan Manhattan distance, yang menjadi kasus khusus dari Minkowski distance. Minkowski distance dinyatakan dengan $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ Manhattan distance \u00b6 Manhattan distance adalah kasus khsusu dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Ukuran ini didefinisikan dengan $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ implementasi \u00b6 silahkan implementasinya Disini disana lengkap dengan codingan dan outputannya MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"mengukur jarak data"},{"location":"MengukurJaral/#pengertian","text":"Disini kita akan belajar cara mengukur jarak data menggunakan beberapa cara atau metode","title":"Pengertian"},{"location":"MengukurJaral/#minkowski-distance","text":"Kelompk Minkowski diantaranya adalah Euclidean distance dan Manhattan distance, yang menjadi kasus khusus dari Minkowski distance. Minkowski distance dinyatakan dengan $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$","title":"Minkowski Distance"},{"location":"MengukurJaral/#manhattan-distance","text":"Manhattan distance adalah kasus khsusu dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Ukuran ini didefinisikan dengan $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$","title":"Manhattan distance"},{"location":"MengukurJaral/#implementasi","text":"silahkan implementasinya Disini disana lengkap dengan codingan dan outputannya MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"implementasi"},{"location":"StatistikDesc/","text":"Ukuran Kecenderungan Terpusat \u00b6 Mean(Rata-Rata) \u00b6 Psada bagian ini, kami melihat cara untuk mengukur kecenderungan pusat data. Misalkan kita mempunyai atribut hasil pretest yang dinyatakan dengan atribut X. Misalkan x1,x2,...,xNx1,x2,...,xN menjadi himpunan nilai N yang diamati atau pengamatan untuk X. Di sini, nilai-nilai ini juga dapat disebut set data (untuk X). Jika kita merencanakan pengamatan untuk nilai pretest, di mana sebagian besar nilai berada? Ini memberi kita gambaran tentang kecenderungan pusat dari data. Ukuran kecenderungan pusat data ukurannya adalah rata-rata(mean), median, modus (mode), dan midrange. Atribut numerik yang paling umum dan efektif dari \"pusat\" dari set data adalah mean (aritmatika). Misalkan x1,x2,...,xNx1,x2,...,xN menjadi satu set nilai N atau pengamatan, Rata-rata dari nilai pretes dinyatakan dengan $$ \\bar{x}=\\frac{\\sum_{i=1}^{N} x_{i}}{N}=\\frac{x_{1}+x_{2}+\\cdots+x_{N}}{N} $$ `` Kadang-kadang, setiap nilai xixi dalam satu data dapat dikaitkan dengan bobot wiwi untuk i=1,..,Ni=1,..,N. Bobot tersebut mencerminkan signifikansi, kepentingan, atau frekuensi kejadian yang melekat pada masing masing nilai. Dalam hal ini, kita dapat menghitungnya dengan $$ \\overline{x}=\\frac{\\sum_{i=1}^{N} w_{i} x_{i}}{\\sum_{i=1}^{N} w_{i}}=\\frac{w_{1} x_{1}+w_{2} x_{2}+\\cdots+w_{N} x_{N}}{w_{1}+w_{2}+\\cdots+w_{N}} $$ Meskipun rata-rata adalah jumlah yang sangat berguna untuk menggambarkan kumpulan data, itu tidak selalu cara terbaik untuk mengukur pusat data. Masalah utama dengan mean adalah sensitivitasnya terhadap nilai ekstrim (mis., outlier). Bahkan beberapa nilai ekstrem saja dapat merusak mean. Misalnya, gaji rata-rata di suatu perusahaan mungkin sangat besar didorong oleh beberapa manajer bergaji tinggi. Demikian pula, nilai rata-rata kelas di ujian dapat rata-rata rendah karena beberapa ada beberap skor nilai saja yang sangat rendah. Untuk mengimbangi efek tersebut kita bisa menggunakan rata-rata yang dipangkas (trimmed mean), yang merupakan rata-rata yang diperoleh setelah memangkas nilai paling tinggi dan nilai yang paling rendah. Untuk contoh, kita dapat mengurutkan nilai gaji yang diamati kemudian menghapus 2% atas dan bawah nilai tersebut sebelum menghitung mean. Kita harus menghindari pemotongan bagian yang terlalu besar (seperti 20%) pada kedua ujungnya, karena hal ini dapat mengakibatkan hilangnya informasi yang berharga) Median (Nilai Tengah) \u00b6 Untuk data miring (asimetris), ukuran pusat data yang lebih baik adalah median, yang merupakan nilai tengah dalam satu set nilai data yang diurutkan. Ini adalah nilai yang memisahkan separuh data yang lebih tinggi dari data tersebut dan sebagian data yang lebih rendah dari data tersebut. Dalam probabilitas dan statistik, median umumnya berlaku untuk data numerik; namun, kami dapat memperluas konsep menjadi data ordinal. Misalkan kumpulan N data yang diberikan untuk atribut X diurutkan dalam urutan naik. Jika N ganjil, maka median adalah nilai tengah dari data yang ordinal. Jika N adalah genap, maka mediannya tidak unik; dihitung dengan rata rata dari nilai $$(\\frac{N}{2}+1) +(\\frac{N}{2}-1) $$ Namun pada data berkelompok, dengan data yang berbentuk kelas interval, kita tidak bisa langsung mengetahui nilai median jika kelas mediannya sudah diketahui dengan formula $$ M e=x_{i j}+\\left(\\frac{\\frac{n}{2}-f_{k i j}}{f_{i}}\\right) p $$ $$ \\begin{array}{l}{M e=\\text { median }} \\ {x_{i j}=\\text { batas bawah median }} \\ {n=\\text { jumlah data }} \\ {f_{k i j}=\\text { frekuensi kumulatif data di bawah kelas median }} \\ {f_{i}=\\text { frekuensi data pada kelas median }} \\ {p=\\text { panjang interval kelas }}\\end{array} $$ Rentang (Range), Quartil, and Rentang Interquartile \u00b6 \u00b6 Misalkan x1,x2,..xNx1,x2,..xN adalah sekumpulan pengamatan untuk atribut numerik, XX. Rentang adalah selisih antara nilai terbesar (maks ()) dan terkecil (min ()). Misalkan data untuk atribut X diurutkan dalam urutan naik.Bagilah data berdasarkan titik titik tertentu sehingga membagi distribusi data ukuran yang sama, seperti pada Gambar dibawah. Titik data ini disebut kuantil. 2-quantile adalah titik data yang membagi bagian bawah dan atas dari distribusi data. Ini sama dengan median. 4-kuantil adalah tiga titik data yang membagi distribusi data menjadi empat bagian yang sama; setiap bagian mewakili seperempat dari distribusi data. Ini lebih sering disebut sebagai kuartil. 100-kuantil lebih sering disebut sebagai persentil; mereka membagi distribusi data menjadi 100 data berukuran sama. Median, kuartil, dan persentil adalah bentuk kuantil yang paling banyak digunakan. Kuartil memberikan gambaran pusat distribus, penyebaran, dan bentuk distribusi. Kuartil satu, dilambangkan oleh Q1, adalah persentil ke-25. Nilai ini menunjukan 25% terendah dari data. Kuartil ketiga, dilambangkan oleh Q3, adalah persentil ke-75 - itu memisahkan data 75% dari terendah data (atau 25% dari tertinggi data. Kuartil kedua adalah persentil ke-50 atau median dari distribusi data. Variansi dan Standar Deviasi \u00b6 \u00b6 Variansi dan standar deviasi adalah ukuran penyebaran data. Nilai-nilai tersebut menunjukkan bagaimana penyebaran distribusi data. Standar Deviasi yang rendah berarti bahwa pengamatan data cenderung sangat dekat dengan rata-rata, sedangkan deviasi standar yang tinggi menunjukkan data tersebar di sejumlah nilai-nilai besar. Varian dari pengamatan $$ N, x_1, x_2, ..., x_N $$ untuk atribut numerik X adalah $$ \\sigma ^ { 2 } = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$ Skewness \u00b6 \u00b6 Derajat distorsi dari kurva lonceng simetris atau distribusi normal. Ini mengukur kurangnya simetri dalam distribusi data Untuk menghitung derajat distorisi dapat menggunakan Koefisien Kemencengan Pearson yang diperoleh dengan menggunakan nilai selisih rata-rata dengan modus dibagi simpangan baku. Koefisien Kemencengan Pearson dirumuskan sebagai berikut $$ s k=\\frac{\\overline{X}-M o}{s} $$ dengan $$ \\overline{X}-M o \\approx 3(\\overline{X}-M e) $$ maka $$ s k \\approx \\frac{3(\\overline{X}-M e)}{s} $$ implementasi \u00b6 \u00b6 silahkan download filenya disini import pandas as pd from scipy import stats df = pd . read_csv ( 'data.csv' , sep = ';' ) temp = { 'stats' :[ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quartile1' , 'Quartile2' , 'Quartile3' , 'Median' , 'Modus' ]} for i in df . columns : temp [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), df [ i ] . std (), df [ i ] . var (), df [ i ] . skew (), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . mean (), stats . mode ( df [ i ]) . mode [ 0 ]] file = pd . DataFrame ( temp ) file . style . hide_index () stats x1 x2 Min 2 500 Max 3 1000 Mean 2.66667 700 Standard Deviasi 0.57735 264.575 Variasi 0.333333 70000 Skewness -1.73205 1.45786 Quartile 1 2.5 550 Quartile 2 3 600 Quartile 3 3 800 Median 2.66667 700 Modus 3 500 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"statistik deskriptif"},{"location":"StatistikDesc/#ukuran-kecenderungan-terpusat","text":"","title":"Ukuran Kecenderungan Terpusat"},{"location":"StatistikDesc/#meanrata-rata","text":"Psada bagian ini, kami melihat cara untuk mengukur kecenderungan pusat data. Misalkan kita mempunyai atribut hasil pretest yang dinyatakan dengan atribut X. Misalkan x1,x2,...,xNx1,x2,...,xN menjadi himpunan nilai N yang diamati atau pengamatan untuk X. Di sini, nilai-nilai ini juga dapat disebut set data (untuk X). Jika kita merencanakan pengamatan untuk nilai pretest, di mana sebagian besar nilai berada? Ini memberi kita gambaran tentang kecenderungan pusat dari data. Ukuran kecenderungan pusat data ukurannya adalah rata-rata(mean), median, modus (mode), dan midrange. Atribut numerik yang paling umum dan efektif dari \"pusat\" dari set data adalah mean (aritmatika). Misalkan x1,x2,...,xNx1,x2,...,xN menjadi satu set nilai N atau pengamatan, Rata-rata dari nilai pretes dinyatakan dengan $$ \\bar{x}=\\frac{\\sum_{i=1}^{N} x_{i}}{N}=\\frac{x_{1}+x_{2}+\\cdots+x_{N}}{N} $$ `` Kadang-kadang, setiap nilai xixi dalam satu data dapat dikaitkan dengan bobot wiwi untuk i=1,..,Ni=1,..,N. Bobot tersebut mencerminkan signifikansi, kepentingan, atau frekuensi kejadian yang melekat pada masing masing nilai. Dalam hal ini, kita dapat menghitungnya dengan $$ \\overline{x}=\\frac{\\sum_{i=1}^{N} w_{i} x_{i}}{\\sum_{i=1}^{N} w_{i}}=\\frac{w_{1} x_{1}+w_{2} x_{2}+\\cdots+w_{N} x_{N}}{w_{1}+w_{2}+\\cdots+w_{N}} $$ Meskipun rata-rata adalah jumlah yang sangat berguna untuk menggambarkan kumpulan data, itu tidak selalu cara terbaik untuk mengukur pusat data. Masalah utama dengan mean adalah sensitivitasnya terhadap nilai ekstrim (mis., outlier). Bahkan beberapa nilai ekstrem saja dapat merusak mean. Misalnya, gaji rata-rata di suatu perusahaan mungkin sangat besar didorong oleh beberapa manajer bergaji tinggi. Demikian pula, nilai rata-rata kelas di ujian dapat rata-rata rendah karena beberapa ada beberap skor nilai saja yang sangat rendah. Untuk mengimbangi efek tersebut kita bisa menggunakan rata-rata yang dipangkas (trimmed mean), yang merupakan rata-rata yang diperoleh setelah memangkas nilai paling tinggi dan nilai yang paling rendah. Untuk contoh, kita dapat mengurutkan nilai gaji yang diamati kemudian menghapus 2% atas dan bawah nilai tersebut sebelum menghitung mean. Kita harus menghindari pemotongan bagian yang terlalu besar (seperti 20%) pada kedua ujungnya, karena hal ini dapat mengakibatkan hilangnya informasi yang berharga)","title":"Mean(Rata-Rata)"},{"location":"StatistikDesc/#median-nilai-tengah","text":"Untuk data miring (asimetris), ukuran pusat data yang lebih baik adalah median, yang merupakan nilai tengah dalam satu set nilai data yang diurutkan. Ini adalah nilai yang memisahkan separuh data yang lebih tinggi dari data tersebut dan sebagian data yang lebih rendah dari data tersebut. Dalam probabilitas dan statistik, median umumnya berlaku untuk data numerik; namun, kami dapat memperluas konsep menjadi data ordinal. Misalkan kumpulan N data yang diberikan untuk atribut X diurutkan dalam urutan naik. Jika N ganjil, maka median adalah nilai tengah dari data yang ordinal. Jika N adalah genap, maka mediannya tidak unik; dihitung dengan rata rata dari nilai $$(\\frac{N}{2}+1) +(\\frac{N}{2}-1) $$ Namun pada data berkelompok, dengan data yang berbentuk kelas interval, kita tidak bisa langsung mengetahui nilai median jika kelas mediannya sudah diketahui dengan formula $$ M e=x_{i j}+\\left(\\frac{\\frac{n}{2}-f_{k i j}}{f_{i}}\\right) p $$ $$ \\begin{array}{l}{M e=\\text { median }} \\ {x_{i j}=\\text { batas bawah median }} \\ {n=\\text { jumlah data }} \\ {f_{k i j}=\\text { frekuensi kumulatif data di bawah kelas median }} \\ {f_{i}=\\text { frekuensi data pada kelas median }} \\ {p=\\text { panjang interval kelas }}\\end{array} $$","title":"Median (Nilai Tengah)"},{"location":"StatistikDesc/#rentang-range-quartil-and-rentang-interquartile","text":"Misalkan x1,x2,..xNx1,x2,..xN adalah sekumpulan pengamatan untuk atribut numerik, XX. Rentang adalah selisih antara nilai terbesar (maks ()) dan terkecil (min ()). Misalkan data untuk atribut X diurutkan dalam urutan naik.Bagilah data berdasarkan titik titik tertentu sehingga membagi distribusi data ukuran yang sama, seperti pada Gambar dibawah. Titik data ini disebut kuantil. 2-quantile adalah titik data yang membagi bagian bawah dan atas dari distribusi data. Ini sama dengan median. 4-kuantil adalah tiga titik data yang membagi distribusi data menjadi empat bagian yang sama; setiap bagian mewakili seperempat dari distribusi data. Ini lebih sering disebut sebagai kuartil. 100-kuantil lebih sering disebut sebagai persentil; mereka membagi distribusi data menjadi 100 data berukuran sama. Median, kuartil, dan persentil adalah bentuk kuantil yang paling banyak digunakan. Kuartil memberikan gambaran pusat distribus, penyebaran, dan bentuk distribusi. Kuartil satu, dilambangkan oleh Q1, adalah persentil ke-25. Nilai ini menunjukan 25% terendah dari data. Kuartil ketiga, dilambangkan oleh Q3, adalah persentil ke-75 - itu memisahkan data 75% dari terendah data (atau 25% dari tertinggi data. Kuartil kedua adalah persentil ke-50 atau median dari distribusi data.","title":"Rentang (Range), Quartil, and Rentang Interquartile\u00b6"},{"location":"StatistikDesc/#variansi-dan-standar-deviasi","text":"Variansi dan standar deviasi adalah ukuran penyebaran data. Nilai-nilai tersebut menunjukkan bagaimana penyebaran distribusi data. Standar Deviasi yang rendah berarti bahwa pengamatan data cenderung sangat dekat dengan rata-rata, sedangkan deviasi standar yang tinggi menunjukkan data tersebar di sejumlah nilai-nilai besar. Varian dari pengamatan $$ N, x_1, x_2, ..., x_N $$ untuk atribut numerik X adalah $$ \\sigma ^ { 2 } = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$","title":"Variansi dan Standar Deviasi\u00b6"},{"location":"StatistikDesc/#skewness","text":"Derajat distorsi dari kurva lonceng simetris atau distribusi normal. Ini mengukur kurangnya simetri dalam distribusi data Untuk menghitung derajat distorisi dapat menggunakan Koefisien Kemencengan Pearson yang diperoleh dengan menggunakan nilai selisih rata-rata dengan modus dibagi simpangan baku. Koefisien Kemencengan Pearson dirumuskan sebagai berikut $$ s k=\\frac{\\overline{X}-M o}{s} $$ dengan $$ \\overline{X}-M o \\approx 3(\\overline{X}-M e) $$ maka $$ s k \\approx \\frac{3(\\overline{X}-M e)}{s} $$","title":"Skewness\u00b6"},{"location":"StatistikDesc/#implementasi","text":"silahkan download filenya disini import pandas as pd from scipy import stats df = pd . read_csv ( 'data.csv' , sep = ';' ) temp = { 'stats' :[ 'Min' , 'Max' , 'Mean' , 'Standard Deviasi' , 'Variasi' , 'Skewnes' , 'Quartile1' , 'Quartile2' , 'Quartile3' , 'Median' , 'Modus' ]} for i in df . columns : temp [ i ] = [ df [ i ] . min (), df [ i ] . max (), df [ i ] . mean (), df [ i ] . std (), df [ i ] . var (), df [ i ] . skew (), df [ i ] . quantile ( 0.25 ), df [ i ] . quantile ( 0.5 ), df [ i ] . quantile ( 0.75 ), df [ i ] . mean (), stats . mode ( df [ i ]) . mode [ 0 ]] file = pd . DataFrame ( temp ) file . style . hide_index () stats x1 x2 Min 2 500 Max 3 1000 Mean 2.66667 700 Standard Deviasi 0.57735 264.575 Variasi 0.333333 70000 Skewness -1.73205 1.45786 Quartile 1 2.5 550 Quartile 2 3 600 Quartile 3 3 800 Median 2.66667 700 Modus 3 500 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"implementasi\u00b6"},{"location":"Weighted K-Nearest Neighbor/","text":"Weighted K-Nearest Neighbor \u00b6 klasifikasi data menggunakan metode W-KNN dengan sampel percobaan sebagai berikut: berikut adalah data yang diambil secara acak dari data iris sebanyak 100 sepal_length sepal_width petal_length petal_width species Training data sepal_length as A sepal_width as B petal_length as C petal_width as D species 6,9 3,1 5,1 2,3 virginica 6,7 3 5 1,7 versicolor 6,9 3,1 4,9 1,5 versicolor 6,7 3 5,2 2,3 virginica 6,7 3,1 4,7 1,5 versicolor 6,5 3,2 5,1 2 virginica 6,9 3,1 5,4 2,1 virginica 7 3,2 4,7 1,4 versicolor 6,5 3 5,2 2 virginica 6,8 2,8 4,8 1,4 versicolor 6,8 3 5,5 2,1 virginica 6,5 2,8 4,6 1,5 versicolor 6,7 3,1 4,4 1,4 versicolor 6,3 2,7 4,9 1,8 virginica 6,6 3 4,4 1,4 versicolor 6,6 2,9 4,6 1,3 versicolor 6,4 2,7 5,3 1,9 virginica 6,2 2,8 4,8 1,8 virginica 6,4 3,2 4,5 1,5 versicolor 6,4 3,2 5,3 2,3 virginica 6,3 3,3 4,7 1,6 versicolor 6,5 3 5,5 1,8 virginica 6,3 2,5 5 1,9 virginica 6,1 3 4,9 1,8 virginica 6,3 2,8 5,1 1,5 virginica 6,7 3,1 5,6 2,4 virginica 6,4 3,1 5,5 1,8 virginica 6,9 3,2 5,7 2,3 virginica 6,3 2,5 4,9 1,5 versicolor 6,7 3,3 5,7 2,1 virginica 6 3 4,8 1,8 virginica 6,4 2,8 5,6 2,1 virginica 6,4 2,8 5,6 2,2 virginica 6,4 2,9 4,3 1,3 versicolor 6,3 2,9 5,6 1,8 virginica 6,1 2,9 4,7 1,4 versicolor 7,2 3 5,8 1,6 virginica 6,1 3 4,6 1,4 versicolor 7,1 3 5,9 2,1 virginica 6,7 3,3 5,7 2,5 virginica 6,2 3,4 5,4 2,3 virginica 5,9 3,2 4,8 1,8 versicolor 6,5 3 5,8 2,2 virginica 5,9 3 5,1 1,8 virginica 6 2,7 5,1 1,6 versicolor 6 2,9 4,5 1,5 versicolor 6,7 2,5 5,8 1,8 virginica 6,8 3,2 5,9 2,3 virginica 6,2 2,9 4,3 1,3 versicolor 6 3,4 4,5 1,6 versicolor 6,3 3,4 5,6 2,4 virginica 6,1 2,8 4,7 1,2 versicolor 7,2 3,2 6 1,8 virginica 6,2 2,2 4,5 1,5 versicolor 6,3 2,3 4,4 1,3 versicolor 5,8 2,7 5,1 1,9 virginica 5,8 2,7 5,1 1,9 virginica 5,8 2,8 5,1 2,4 virginica 5,9 3 4,2 1,5 versicolor 7,4 2,8 6,1 1,9 virginica 6 2,2 5 1,5 virginica 6,1 2,6 5,6 1,4 virginica 5,7 2,5 5 2 virginica 6,1 2,8 4 1,3 versicolor 5,6 2,8 4,9 2 virginica 7,7 3 6,1 2,3 virginica 6,3 3,3 6 2,5 virginica 5,6 3 4,5 1,5 versicolor 5,7 2,8 4,5 1,3 versicolor 7,2 3,6 6,1 2,5 virginica 7,3 2,9 6,3 1,8 virginica 5,7 2,9 4,2 1,3 versicolor 5,7 3 4,2 1,2 versicolor 5,7 2,8 4,1 1,3 versicolor 5,8 2,6 4 1,2 versicolor 5,4 3 4,5 1,5 versicolor 5,6 2,7 4,2 1,3 versicolor 5,6 3 4,1 1,3 versicolor 5,8 2,7 3,9 1,2 versicolor 5,8 2,7 4,1 1 versicolor 5,5 2,6 4,4 1,2 versicolor 6 2,2 4 1 versicolor 7,6 3 6,6 2,1 virginica 5,5 2,5 4 1,3 versicolor 5,6 2,5 3,9 1,1 versicolor 5,5 2,3 4 1,3 versicolor 5,6 2,9 3,6 1,3 versicolor 7,9 3,8 6,4 2 virginica 7,7 2,8 6,7 2 virginica 5,5 2,4 3,8 1,1 versicolor 5,2 2,7 3,9 1,4 versicolor 5,7 2,6 3,5 1 versicolor 7,7 3,8 6,7 2,2 virginica 5,5 2,4 3,7 1 versicolor 4,9 2,5 4,5 1,7 virginica 7,7 2,6 6,9 2,3 virginica 5 2 3,5 1 versicolor 5 2,3 3,3 1 versicolor 5,1 2,5 3 1,1 versicolor 4,9 2,4 3,3 1 versicolor 5,7 3,8 1,7 0,3 setosa 5,1 3,8 1,9 0,4 setosa 5,4 3,9 1,7 0,4 setosa 5,1 3,3 1,7 0,5 setosa 5,4 3,4 1,7 0,2 setosa 5,4 3,4 1,5 0,4 setosa 5 3,5 1,6 0,6 setosa 4,8 3,4 1,9 0,2 setosa 5 3,4 1,6 0,4 setosa 5,7 4,4 1,5 0,4 setosa 5,4 3,7 1,5 0,2 setosa 5 3 1,6 0,2 setosa 5,3 3,7 1,5 0,2 setosa 5,1 3,7 1,5 0,4 setosa 5,2 3,5 1,5 0,2 setosa 5,1 3,8 1,6 0,2 setosa 5,1 3,4 1,5 0,2 setosa 5,5 3,5 1,3 0,2 setosa 5,1 3,8 1,5 0,3 setosa 5,4 3,9 1,3 0,4 setosa 5,2 3,4 1,4 0,2 setosa 5 3,4 1,5 0,2 setosa 5,1 3,5 1,4 0,3 setosa 4,8 3,1 1,6 0,2 setosa 4,8 3,4 1,6 0,2 setosa 5,5 4,2 1,4 0,2 setosa 5,8 4 1,2 0,2 setosa 5,1 3,5 1,4 0,2 setosa 4,7 3,2 1,6 0,2 setosa 5 3,3 1,4 0,2 setosa 4,9 3,1 1,5 0,1 setosa 4,9 3,1 1,5 0,1 setosa 4,9 3,1 1,5 0,1 setosa 5,2 4,1 1,5 0,1 setosa 5 3,6 1,4 0,2 setosa 4,9 3 1,4 0,2 setosa 4,8 3 1,4 0,3 setosa 5 3,5 1,3 0,3 setosa 4,6 3,1 1,5 0,2 setosa 4,8 3 1,4 0,1 setosa 5 3,2 1,2 0,2 setosa 4,6 3,4 1,4 0,3 setosa 4,6 3,2 1,4 0,2 setosa 4,7 3,2 1,3 0,2 setosa 4,4 2,9 1,4 0,2 setosa 4,5 2,3 1,3 0,3 setosa 4,4 3 1,3 0,2 setosa 4,4 3,2 1,3 0,2 setosa 4,6 3,6 1 0,2 setosa 4,3 3 1,1 0,1 setosa menghitung jarak \u00b6 sepal_length as A sepal_width as B petal_length as C petal_width as D species (A-S1)^2 (B-S2)^2 (C-S3)^2 (D-S4)^2 SQRT(D) 6,9 3,1 5,1 2,3 virginica 3,6 1,2 0,4 0,6 2,4 6,7 3 5 1,7 versicolor 2,9 1,0 0,3 0,0 2,0 6,9 3,1 4,9 1,5 versicolor 3,6 1,2 0,2 0,0 2,2 6,7 3 5,2 2,3 virginica 2,9 1,0 0,5 0,6 2,2 6,7 3,1 4,7 1,5 versicolor 2,9 1,2 0,0 0,0 2,0 6,5 3,2 5,1 2 virginica 2,3 1,4 0,4 0,3 2,1 6,9 3,1 5,4 2,1 virginica 3,6 1,2 0,8 0,4 2,4 7 3,2 4,7 1,4 versicolor 4,0 1,4 0,0 0,0 2,3 6,5 3 5,2 2 virginica 2,3 1,0 0,5 0,3 2,0 6,8 2,8 4,8 1,4 versicolor 3,2 0,6 0,1 0,0 2,0 6,8 3 5,5 2,1 virginica 3,2 1,0 1,0 0,4 2,4 6,5 2,8 4,6 1,5 versicolor 2,3 0,6 0,0 0,0 1,7 6,7 3,1 4,4 1,4 versicolor 2,9 1,2 0,0 0,0 2,0 6,3 2,7 4,9 1,8 virginica 1,7 0,5 0,2 0,1 1,6 6,6 3 4,4 1,4 versicolor 2,6 1,0 0,0 0,0 1,9 6,6 2,9 4,6 1,3 versicolor 2,6 0,8 0,0 0,0 1,8 6,4 2,7 5,3 1,9 virginica 2,0 0,5 0,6 0,2 1,8 6,2 2,8 4,8 1,8 virginica 1,4 0,6 0,1 0,1 1,5 6,4 3,2 4,5 1,5 versicolor 2,0 1,4 0,0 0,0 1,8 6,4 3,2 5,3 2,3 virginica 2,0 1,4 0,6 0,6 2,2 6,3 3,3 4,7 1,6 versicolor 1,7 1,7 0,0 0,0 1,9 6,5 3 5,5 1,8 virginica 2,3 1,0 1,0 0,1 2,1 6,3 2,5 5 1,9 virginica 1,7 0,3 0,3 0,2 1,5 6,1 3 4,9 1,8 virginica 1,2 1,0 0,2 0,1 1,6 6,3 2,8 5,1 1,5 virginica 1,7 0,6 0,4 0,0 1,6 6,7 3,1 5,6 2,4 virginica 2,9 1,2 1,2 0,8 2,5 6,4 3,1 5,5 1,8 virginica 2,0 1,2 1,0 0,1 2,1 6,9 3,2 5,7 2,3 virginica 3,6 1,4 1,4 0,6 2,7 6,3 2,5 4,9 1,5 versicolor 1,7 0,3 0,2 0,0 1,4 6,7 3,3 5,7 2,1 virginica 2,9 1,7 1,4 0,4 2,5 6 3 4,8 1,8 virginica 1,0 1,0 0,1 0,1 1,5 6,4 2,8 5,6 2,1 virginica 2,0 0,6 1,2 0,4 2,0 6,4 2,8 5,6 2,2 virginica 2,0 0,6 1,2 0,5 2,1 6,4 2,9 4,3 1,3 versicolor 2,0 0,8 0,0 0,0 1,7 6,3 2,9 5,6 1,8 virginica 1,7 0,8 1,2 0,1 1,9 6,1 2,9 4,7 1,4 versicolor 1,2 0,8 0,0 0,0 1,4 7,2 3 5,8 1,6 virginica 4,8 1,0 1,7 0,0 2,7 6,1 3 4,6 1,4 versicolor 1,2 1,0 0,0 0,0 1,5 7,1 3 5,9 2,1 virginica 4,4 1,0 2,0 0,4 2,8 6,7 3,3 5,7 2,5 virginica 2,9 1,7 1,4 1,0 2,6 6,2 3,4 5,4 2,3 virginica 1,4 2,0 0,8 0,6 2,2 5,9 3,2 4,8 1,8 versicolor 0,8 1,4 0,1 0,1 1,6 6,5 3 5,8 2,2 virginica 2,3 1,0 1,7 0,5 2,3 5,9 3 5,1 1,8 virginica 0,8 1,0 0,4 0,1 1,5 6 2,7 5,1 1,6 versicolor 1,0 0,5 0,4 0,0 1,4 6 2,9 4,5 1,5 versicolor 1,0 0,8 0,0 0,0 1,3 6,7 2,5 5,8 1,8 virginica 2,9 0,3 1,7 0,1 2,2 6,8 3,2 5,9 2,3 virginica 3,2 1,4 2,0 0,6 2,7 6,2 2,9 4,3 1,3 versicolor 1,4 0,8 0,0 0,0 1,5 6 3,4 4,5 1,6 versicolor 1,0 2,0 0,0 0,0 1,7 6,3 3,4 5,6 2,4 virginica 1,7 2,0 1,2 0,8 2,4 6,1 2,8 4,7 1,2 versicolor 1,2 0,6 0,0 0,1 1,4 7,2 3,2 6 1,8 virginica 4,8 1,4 2,3 0,1 2,9 6,2 2,2 4,5 1,5 versicolor 1,4 0,0 0,0 0,0 1,2 6,3 2,3 4,4 1,3 versicolor 1,7 0,1 0,0 0,0 1,4 5,8 2,7 5,1 1,9 virginica 0,6 0,5 0,4 0,2 1,3 5,8 2,7 5,1 1,9 virginica 0,6 0,5 0,4 0,2 1,3 5,8 2,8 5,1 2,4 virginica 0,6 0,6 0,4 0,8 1,6 5,9 3 4,2 1,5 versicolor 0,8 1,0 0,1 0,0 1,4 7,4 2,8 6,1 1,9 virginica 5,8 0,6 2,6 0,2 3,0 6 2,2 5 1,5 virginica 1,0 0,0 0,3 0,0 1,1 6,1 2,6 5,6 1,4 virginica 1,2 0,4 1,2 0,0 1,7 5,7 2,5 5 2 virginica 0,5 0,3 0,3 0,3 1,1 6,1 2,8 4 1,3 versicolor 1,2 0,6 0,3 0,0 1,5 5,6 2,8 4,9 2 virginica 0,4 0,6 0,2 0,3 1,2 7,7 3 6,1 2,3 virginica 7,3 1,0 2,6 0,6 3,4 6,3 3,3 6 2,5 virginica 1,7 1,7 2,3 1,0 2,6 5,6 3 4,5 1,5 versicolor 0,4 1,0 0,0 0,0 1,2 5,7 2,8 4,5 1,3 versicolor 0,5 0,6 0,0 0,0 1,1 7,2 3,6 6,1 2,5 virginica 4,8 2,6 2,6 1,0 3,3 7,3 2,9 6,3 1,8 virginica 5,3 0,8 3,2 0,1 3,1 5,7 2,9 4,2 1,3 versicolor 0,5 0,8 0,1 0,0 1,2 5,7 3 4,2 1,2 versicolor 0,5 1,0 0,1 0,1 1,3 5,7 2,8 4,1 1,3 versicolor 0,5 0,6 0,2 0,0 1,2 5,8 2,6 4 1,2 versicolor 0,6 0,4 0,3 0,1 1,2 5,4 3 4,5 1,5 versicolor 0,2 1,0 0,0 0,0 1,1 5,6 2,7 4,2 1,3 versicolor 0,4 0,5 0,1 0,0 1,0 5,6 3 4,1 1,3 versicolor 0,4 1,0 0,2 0,0 1,2 5,8 2,7 3,9 1,2 versicolor 0,6 0,5 0,4 0,1 1,3 5,8 2,7 4,1 1 versicolor 0,6 0,5 0,2 0,3 1,2 5,5 2,6 4,4 1,2 versicolor 0,3 0,4 0,0 0,1 0,8 6 2,2 4 1 versicolor 1,0 0,0 0,3 0,3 1,2 7,6 3 6,6 2,1 virginica 6,8 1,0 4,4 0,4 3,5 5,5 2,5 4 1,3 versicolor 0,3 0,3 0,3 0,0 0,9 5,6 2,5 3,9 1,1 versicolor 0,4 0,3 0,4 0,2 1,1 5,5 2,3 4 1,3 versicolor 0,3 0,1 0,3 0,0 0,8 5,6 2,9 3,6 1,3 versicolor 0,4 0,8 0,8 0,0 1,4 7,9 3,8 6,4 2 virginica 8,4 3,2 3,6 0,3 3,9 7,7 2,8 6,7 2 virginica 7,3 0,6 4,8 0,3 3,6 5,5 2,4 3,8 1,1 versicolor 0,3 0,2 0,5 0,2 1,0 5,2 2,7 3,9 1,4 versicolor 0,0 0,5 0,4 0,0 0,9 5,7 2,6 3,5 1 versicolor 0,5 0,4 1,0 0,3 1,4 7,7 3,8 6,7 2,2 virginica 7,3 3,2 4,8 0,5 4,0 5,5 2,4 3,7 1 versicolor 0,3 0,2 0,6 0,3 1,1 4,9 2,5 4,5 1,7 virginica 0,0 0,3 0,0 0,0 0,5 7,7 2,6 6,9 2,3 virginica 7,3 0,4 5,8 0,6 3,7 5 2 3,5 1 versicolor 0,0 0,0 1,0 0,3 1,1 5 2,3 3,3 1 versicolor 0,0 0,1 1,4 0,3 1,3 5,1 2,5 3 1,1 versicolor 0,0 0,3 2,3 0,2 1,6 4,9 2,4 3,3 1 versicolor 0,0 0,2 1,4 0,3 1,4 5,7 3,8 1,7 0,3 setosa 0,5 3,2 7,8 1,4 3,6 5,1 3,8 1,9 0,4 setosa 0,0 3,2 6,8 1,2 3,3 5,4 3,9 1,7 0,4 setosa 0,2 3,6 7,8 1,2 3,6 5,1 3,3 1,7 0,5 setosa 0,0 1,7 7,8 1,0 3,2 5,4 3,4 1,7 0,2 setosa 0,2 2,0 7,8 1,7 3,4 5,4 3,4 1,5 0,4 setosa 0,2 2,0 9,0 1,2 3,5 5 3,5 1,6 0,6 setosa 0,0 2,3 8,4 0,8 3,4 4,8 3,4 1,9 0,2 setosa 0,0 2,0 6,8 1,7 3,2 5 3,4 1,6 0,4 setosa 0,0 2,0 8,4 1,2 3,4 5,7 4,4 1,5 0,4 setosa 0,5 5,8 9,0 1,2 4,1 5,4 3,7 1,5 0,2 setosa 0,2 2,9 9,0 1,7 3,7 5 3 1,6 0,2 setosa 0,0 1,0 8,4 1,7 3,3 5,3 3,7 1,5 0,2 setosa 0,1 2,9 9,0 1,7 3,7 5,1 3,7 1,5 0,4 setosa 0,0 2,9 9,0 1,2 3,6 5,2 3,5 1,5 0,2 setosa 0,0 2,3 9,0 1,7 3,6 5,1 3,8 1,6 0,2 setosa 0,0 3,2 8,4 1,7 3,7 5,1 3,4 1,5 0,2 setosa 0,0 2,0 9,0 1,7 3,6 5,5 3,5 1,3 0,2 setosa 0,3 2,3 10,2 1,7 3,8 5,1 3,8 1,5 0,3 setosa 0,0 3,2 9,0 1,4 3,7 5,4 3,9 1,3 0,4 setosa 0,2 3,6 10,2 1,2 3,9 5,2 3,4 1,4 0,2 setosa 0,0 2,0 9,6 1,7 3,6 5 3,4 1,5 0,2 setosa 0,0 2,0 9,0 1,7 3,6 5,1 3,5 1,4 0,3 setosa 0,0 2,3 9,6 1,4 3,6 4,8 3,1 1,6 0,2 setosa 0,0 1,2 8,4 1,7 3,4 4,8 3,4 1,6 0,2 setosa 0,0 2,0 8,4 1,7 3,5 5,5 4,2 1,4 0,2 setosa 0,3 4,8 9,6 1,7 4,0 5,8 4 1,2 0,2 setosa 0,6 4,0 10,9 1,7 4,1 5,1 3,5 1,4 0,2 setosa 0,0 2,3 9,6 1,7 3,7 4,7 3,2 1,6 0,2 setosa 0,1 1,4 8,4 1,7 3,4 5 3,3 1,4 0,2 setosa 0,0 1,7 9,6 1,7 3,6 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 5,2 4,1 1,5 0,1 setosa 0,0 4,4 9,0 2,0 3,9 5 3,6 1,4 0,2 setosa 0,0 2,6 9,6 1,7 3,7 4,9 3 1,4 0,2 setosa 0,0 1,0 9,6 1,7 3,5 4,8 3 1,4 0,3 setosa 0,0 1,0 9,6 1,4 3,5 5 3,5 1,3 0,3 setosa 0,0 2,3 10,2 1,4 3,7 4,6 3,1 1,5 0,2 setosa 0,2 1,2 9,0 1,7 3,5 4,8 3 1,4 0,1 setosa 0,0 1,0 9,6 2,0 3,6 5 3,2 1,2 0,2 setosa 0,0 1,4 10,9 1,7 3,7 4,6 3,4 1,4 0,3 setosa 0,2 2,0 9,6 1,4 3,6 4,6 3,2 1,4 0,2 setosa 0,2 1,4 9,6 1,7 3,6 4,7 3,2 1,3 0,2 setosa 0,1 1,4 10,2 1,7 3,7 4,4 2,9 1,4 0,2 setosa 0,4 0,8 9,6 1,7 3,5 4,5 2,3 1,3 0,3 setosa 0,3 0,1 10,2 1,4 3,5 4,4 3 1,3 0,2 setosa 0,4 1,0 10,2 1,7 3,6 4,4 3,2 1,3 0,2 setosa 0,4 1,4 10,2 1,7 3,7 4,6 3,6 1 0,2 setosa 0,2 2,6 12,3 1,7 4,1 4,3 3 1,1 0,1 setosa 0,5 1,0 11,6 2,0 3,9 dari jarak diatas kita bisa mengambil sampel mengetahui data yang akan dicari seperti contoh soal berikut : sepal_length sepal_width petal_length petal_width species Sampel data 5 2 4,5 1,5 ? dan diketahui hasilnya sebagai berikut : K=5 D 1/D Setosa versicolor virginica 0,5 2 0 2 0 0,8 1,25 0 1,25 0 0,8 1,25 0 1,25 0 0,9 1,111111 0 1,111111 0 0,9 1,111111 0 0 1,111111 sum 0 5,611111 1,111111 dan dari data diatas, yang versi color lah yang lebih tinggi jadi dari pertanyaan nya isinya adalah VERSICOLOR sepal_length sepal_width petal_length petal_width species Sampel data 5 2 4,5 1,5 versicolor","title":"weight KNN"},{"location":"Weighted K-Nearest Neighbor/#weighted-k-nearest-neighbor","text":"klasifikasi data menggunakan metode W-KNN dengan sampel percobaan sebagai berikut: berikut adalah data yang diambil secara acak dari data iris sebanyak 100 sepal_length sepal_width petal_length petal_width species Training data sepal_length as A sepal_width as B petal_length as C petal_width as D species 6,9 3,1 5,1 2,3 virginica 6,7 3 5 1,7 versicolor 6,9 3,1 4,9 1,5 versicolor 6,7 3 5,2 2,3 virginica 6,7 3,1 4,7 1,5 versicolor 6,5 3,2 5,1 2 virginica 6,9 3,1 5,4 2,1 virginica 7 3,2 4,7 1,4 versicolor 6,5 3 5,2 2 virginica 6,8 2,8 4,8 1,4 versicolor 6,8 3 5,5 2,1 virginica 6,5 2,8 4,6 1,5 versicolor 6,7 3,1 4,4 1,4 versicolor 6,3 2,7 4,9 1,8 virginica 6,6 3 4,4 1,4 versicolor 6,6 2,9 4,6 1,3 versicolor 6,4 2,7 5,3 1,9 virginica 6,2 2,8 4,8 1,8 virginica 6,4 3,2 4,5 1,5 versicolor 6,4 3,2 5,3 2,3 virginica 6,3 3,3 4,7 1,6 versicolor 6,5 3 5,5 1,8 virginica 6,3 2,5 5 1,9 virginica 6,1 3 4,9 1,8 virginica 6,3 2,8 5,1 1,5 virginica 6,7 3,1 5,6 2,4 virginica 6,4 3,1 5,5 1,8 virginica 6,9 3,2 5,7 2,3 virginica 6,3 2,5 4,9 1,5 versicolor 6,7 3,3 5,7 2,1 virginica 6 3 4,8 1,8 virginica 6,4 2,8 5,6 2,1 virginica 6,4 2,8 5,6 2,2 virginica 6,4 2,9 4,3 1,3 versicolor 6,3 2,9 5,6 1,8 virginica 6,1 2,9 4,7 1,4 versicolor 7,2 3 5,8 1,6 virginica 6,1 3 4,6 1,4 versicolor 7,1 3 5,9 2,1 virginica 6,7 3,3 5,7 2,5 virginica 6,2 3,4 5,4 2,3 virginica 5,9 3,2 4,8 1,8 versicolor 6,5 3 5,8 2,2 virginica 5,9 3 5,1 1,8 virginica 6 2,7 5,1 1,6 versicolor 6 2,9 4,5 1,5 versicolor 6,7 2,5 5,8 1,8 virginica 6,8 3,2 5,9 2,3 virginica 6,2 2,9 4,3 1,3 versicolor 6 3,4 4,5 1,6 versicolor 6,3 3,4 5,6 2,4 virginica 6,1 2,8 4,7 1,2 versicolor 7,2 3,2 6 1,8 virginica 6,2 2,2 4,5 1,5 versicolor 6,3 2,3 4,4 1,3 versicolor 5,8 2,7 5,1 1,9 virginica 5,8 2,7 5,1 1,9 virginica 5,8 2,8 5,1 2,4 virginica 5,9 3 4,2 1,5 versicolor 7,4 2,8 6,1 1,9 virginica 6 2,2 5 1,5 virginica 6,1 2,6 5,6 1,4 virginica 5,7 2,5 5 2 virginica 6,1 2,8 4 1,3 versicolor 5,6 2,8 4,9 2 virginica 7,7 3 6,1 2,3 virginica 6,3 3,3 6 2,5 virginica 5,6 3 4,5 1,5 versicolor 5,7 2,8 4,5 1,3 versicolor 7,2 3,6 6,1 2,5 virginica 7,3 2,9 6,3 1,8 virginica 5,7 2,9 4,2 1,3 versicolor 5,7 3 4,2 1,2 versicolor 5,7 2,8 4,1 1,3 versicolor 5,8 2,6 4 1,2 versicolor 5,4 3 4,5 1,5 versicolor 5,6 2,7 4,2 1,3 versicolor 5,6 3 4,1 1,3 versicolor 5,8 2,7 3,9 1,2 versicolor 5,8 2,7 4,1 1 versicolor 5,5 2,6 4,4 1,2 versicolor 6 2,2 4 1 versicolor 7,6 3 6,6 2,1 virginica 5,5 2,5 4 1,3 versicolor 5,6 2,5 3,9 1,1 versicolor 5,5 2,3 4 1,3 versicolor 5,6 2,9 3,6 1,3 versicolor 7,9 3,8 6,4 2 virginica 7,7 2,8 6,7 2 virginica 5,5 2,4 3,8 1,1 versicolor 5,2 2,7 3,9 1,4 versicolor 5,7 2,6 3,5 1 versicolor 7,7 3,8 6,7 2,2 virginica 5,5 2,4 3,7 1 versicolor 4,9 2,5 4,5 1,7 virginica 7,7 2,6 6,9 2,3 virginica 5 2 3,5 1 versicolor 5 2,3 3,3 1 versicolor 5,1 2,5 3 1,1 versicolor 4,9 2,4 3,3 1 versicolor 5,7 3,8 1,7 0,3 setosa 5,1 3,8 1,9 0,4 setosa 5,4 3,9 1,7 0,4 setosa 5,1 3,3 1,7 0,5 setosa 5,4 3,4 1,7 0,2 setosa 5,4 3,4 1,5 0,4 setosa 5 3,5 1,6 0,6 setosa 4,8 3,4 1,9 0,2 setosa 5 3,4 1,6 0,4 setosa 5,7 4,4 1,5 0,4 setosa 5,4 3,7 1,5 0,2 setosa 5 3 1,6 0,2 setosa 5,3 3,7 1,5 0,2 setosa 5,1 3,7 1,5 0,4 setosa 5,2 3,5 1,5 0,2 setosa 5,1 3,8 1,6 0,2 setosa 5,1 3,4 1,5 0,2 setosa 5,5 3,5 1,3 0,2 setosa 5,1 3,8 1,5 0,3 setosa 5,4 3,9 1,3 0,4 setosa 5,2 3,4 1,4 0,2 setosa 5 3,4 1,5 0,2 setosa 5,1 3,5 1,4 0,3 setosa 4,8 3,1 1,6 0,2 setosa 4,8 3,4 1,6 0,2 setosa 5,5 4,2 1,4 0,2 setosa 5,8 4 1,2 0,2 setosa 5,1 3,5 1,4 0,2 setosa 4,7 3,2 1,6 0,2 setosa 5 3,3 1,4 0,2 setosa 4,9 3,1 1,5 0,1 setosa 4,9 3,1 1,5 0,1 setosa 4,9 3,1 1,5 0,1 setosa 5,2 4,1 1,5 0,1 setosa 5 3,6 1,4 0,2 setosa 4,9 3 1,4 0,2 setosa 4,8 3 1,4 0,3 setosa 5 3,5 1,3 0,3 setosa 4,6 3,1 1,5 0,2 setosa 4,8 3 1,4 0,1 setosa 5 3,2 1,2 0,2 setosa 4,6 3,4 1,4 0,3 setosa 4,6 3,2 1,4 0,2 setosa 4,7 3,2 1,3 0,2 setosa 4,4 2,9 1,4 0,2 setosa 4,5 2,3 1,3 0,3 setosa 4,4 3 1,3 0,2 setosa 4,4 3,2 1,3 0,2 setosa 4,6 3,6 1 0,2 setosa 4,3 3 1,1 0,1 setosa","title":"Weighted K-Nearest Neighbor"},{"location":"Weighted K-Nearest Neighbor/#menghitung-jarak","text":"sepal_length as A sepal_width as B petal_length as C petal_width as D species (A-S1)^2 (B-S2)^2 (C-S3)^2 (D-S4)^2 SQRT(D) 6,9 3,1 5,1 2,3 virginica 3,6 1,2 0,4 0,6 2,4 6,7 3 5 1,7 versicolor 2,9 1,0 0,3 0,0 2,0 6,9 3,1 4,9 1,5 versicolor 3,6 1,2 0,2 0,0 2,2 6,7 3 5,2 2,3 virginica 2,9 1,0 0,5 0,6 2,2 6,7 3,1 4,7 1,5 versicolor 2,9 1,2 0,0 0,0 2,0 6,5 3,2 5,1 2 virginica 2,3 1,4 0,4 0,3 2,1 6,9 3,1 5,4 2,1 virginica 3,6 1,2 0,8 0,4 2,4 7 3,2 4,7 1,4 versicolor 4,0 1,4 0,0 0,0 2,3 6,5 3 5,2 2 virginica 2,3 1,0 0,5 0,3 2,0 6,8 2,8 4,8 1,4 versicolor 3,2 0,6 0,1 0,0 2,0 6,8 3 5,5 2,1 virginica 3,2 1,0 1,0 0,4 2,4 6,5 2,8 4,6 1,5 versicolor 2,3 0,6 0,0 0,0 1,7 6,7 3,1 4,4 1,4 versicolor 2,9 1,2 0,0 0,0 2,0 6,3 2,7 4,9 1,8 virginica 1,7 0,5 0,2 0,1 1,6 6,6 3 4,4 1,4 versicolor 2,6 1,0 0,0 0,0 1,9 6,6 2,9 4,6 1,3 versicolor 2,6 0,8 0,0 0,0 1,8 6,4 2,7 5,3 1,9 virginica 2,0 0,5 0,6 0,2 1,8 6,2 2,8 4,8 1,8 virginica 1,4 0,6 0,1 0,1 1,5 6,4 3,2 4,5 1,5 versicolor 2,0 1,4 0,0 0,0 1,8 6,4 3,2 5,3 2,3 virginica 2,0 1,4 0,6 0,6 2,2 6,3 3,3 4,7 1,6 versicolor 1,7 1,7 0,0 0,0 1,9 6,5 3 5,5 1,8 virginica 2,3 1,0 1,0 0,1 2,1 6,3 2,5 5 1,9 virginica 1,7 0,3 0,3 0,2 1,5 6,1 3 4,9 1,8 virginica 1,2 1,0 0,2 0,1 1,6 6,3 2,8 5,1 1,5 virginica 1,7 0,6 0,4 0,0 1,6 6,7 3,1 5,6 2,4 virginica 2,9 1,2 1,2 0,8 2,5 6,4 3,1 5,5 1,8 virginica 2,0 1,2 1,0 0,1 2,1 6,9 3,2 5,7 2,3 virginica 3,6 1,4 1,4 0,6 2,7 6,3 2,5 4,9 1,5 versicolor 1,7 0,3 0,2 0,0 1,4 6,7 3,3 5,7 2,1 virginica 2,9 1,7 1,4 0,4 2,5 6 3 4,8 1,8 virginica 1,0 1,0 0,1 0,1 1,5 6,4 2,8 5,6 2,1 virginica 2,0 0,6 1,2 0,4 2,0 6,4 2,8 5,6 2,2 virginica 2,0 0,6 1,2 0,5 2,1 6,4 2,9 4,3 1,3 versicolor 2,0 0,8 0,0 0,0 1,7 6,3 2,9 5,6 1,8 virginica 1,7 0,8 1,2 0,1 1,9 6,1 2,9 4,7 1,4 versicolor 1,2 0,8 0,0 0,0 1,4 7,2 3 5,8 1,6 virginica 4,8 1,0 1,7 0,0 2,7 6,1 3 4,6 1,4 versicolor 1,2 1,0 0,0 0,0 1,5 7,1 3 5,9 2,1 virginica 4,4 1,0 2,0 0,4 2,8 6,7 3,3 5,7 2,5 virginica 2,9 1,7 1,4 1,0 2,6 6,2 3,4 5,4 2,3 virginica 1,4 2,0 0,8 0,6 2,2 5,9 3,2 4,8 1,8 versicolor 0,8 1,4 0,1 0,1 1,6 6,5 3 5,8 2,2 virginica 2,3 1,0 1,7 0,5 2,3 5,9 3 5,1 1,8 virginica 0,8 1,0 0,4 0,1 1,5 6 2,7 5,1 1,6 versicolor 1,0 0,5 0,4 0,0 1,4 6 2,9 4,5 1,5 versicolor 1,0 0,8 0,0 0,0 1,3 6,7 2,5 5,8 1,8 virginica 2,9 0,3 1,7 0,1 2,2 6,8 3,2 5,9 2,3 virginica 3,2 1,4 2,0 0,6 2,7 6,2 2,9 4,3 1,3 versicolor 1,4 0,8 0,0 0,0 1,5 6 3,4 4,5 1,6 versicolor 1,0 2,0 0,0 0,0 1,7 6,3 3,4 5,6 2,4 virginica 1,7 2,0 1,2 0,8 2,4 6,1 2,8 4,7 1,2 versicolor 1,2 0,6 0,0 0,1 1,4 7,2 3,2 6 1,8 virginica 4,8 1,4 2,3 0,1 2,9 6,2 2,2 4,5 1,5 versicolor 1,4 0,0 0,0 0,0 1,2 6,3 2,3 4,4 1,3 versicolor 1,7 0,1 0,0 0,0 1,4 5,8 2,7 5,1 1,9 virginica 0,6 0,5 0,4 0,2 1,3 5,8 2,7 5,1 1,9 virginica 0,6 0,5 0,4 0,2 1,3 5,8 2,8 5,1 2,4 virginica 0,6 0,6 0,4 0,8 1,6 5,9 3 4,2 1,5 versicolor 0,8 1,0 0,1 0,0 1,4 7,4 2,8 6,1 1,9 virginica 5,8 0,6 2,6 0,2 3,0 6 2,2 5 1,5 virginica 1,0 0,0 0,3 0,0 1,1 6,1 2,6 5,6 1,4 virginica 1,2 0,4 1,2 0,0 1,7 5,7 2,5 5 2 virginica 0,5 0,3 0,3 0,3 1,1 6,1 2,8 4 1,3 versicolor 1,2 0,6 0,3 0,0 1,5 5,6 2,8 4,9 2 virginica 0,4 0,6 0,2 0,3 1,2 7,7 3 6,1 2,3 virginica 7,3 1,0 2,6 0,6 3,4 6,3 3,3 6 2,5 virginica 1,7 1,7 2,3 1,0 2,6 5,6 3 4,5 1,5 versicolor 0,4 1,0 0,0 0,0 1,2 5,7 2,8 4,5 1,3 versicolor 0,5 0,6 0,0 0,0 1,1 7,2 3,6 6,1 2,5 virginica 4,8 2,6 2,6 1,0 3,3 7,3 2,9 6,3 1,8 virginica 5,3 0,8 3,2 0,1 3,1 5,7 2,9 4,2 1,3 versicolor 0,5 0,8 0,1 0,0 1,2 5,7 3 4,2 1,2 versicolor 0,5 1,0 0,1 0,1 1,3 5,7 2,8 4,1 1,3 versicolor 0,5 0,6 0,2 0,0 1,2 5,8 2,6 4 1,2 versicolor 0,6 0,4 0,3 0,1 1,2 5,4 3 4,5 1,5 versicolor 0,2 1,0 0,0 0,0 1,1 5,6 2,7 4,2 1,3 versicolor 0,4 0,5 0,1 0,0 1,0 5,6 3 4,1 1,3 versicolor 0,4 1,0 0,2 0,0 1,2 5,8 2,7 3,9 1,2 versicolor 0,6 0,5 0,4 0,1 1,3 5,8 2,7 4,1 1 versicolor 0,6 0,5 0,2 0,3 1,2 5,5 2,6 4,4 1,2 versicolor 0,3 0,4 0,0 0,1 0,8 6 2,2 4 1 versicolor 1,0 0,0 0,3 0,3 1,2 7,6 3 6,6 2,1 virginica 6,8 1,0 4,4 0,4 3,5 5,5 2,5 4 1,3 versicolor 0,3 0,3 0,3 0,0 0,9 5,6 2,5 3,9 1,1 versicolor 0,4 0,3 0,4 0,2 1,1 5,5 2,3 4 1,3 versicolor 0,3 0,1 0,3 0,0 0,8 5,6 2,9 3,6 1,3 versicolor 0,4 0,8 0,8 0,0 1,4 7,9 3,8 6,4 2 virginica 8,4 3,2 3,6 0,3 3,9 7,7 2,8 6,7 2 virginica 7,3 0,6 4,8 0,3 3,6 5,5 2,4 3,8 1,1 versicolor 0,3 0,2 0,5 0,2 1,0 5,2 2,7 3,9 1,4 versicolor 0,0 0,5 0,4 0,0 0,9 5,7 2,6 3,5 1 versicolor 0,5 0,4 1,0 0,3 1,4 7,7 3,8 6,7 2,2 virginica 7,3 3,2 4,8 0,5 4,0 5,5 2,4 3,7 1 versicolor 0,3 0,2 0,6 0,3 1,1 4,9 2,5 4,5 1,7 virginica 0,0 0,3 0,0 0,0 0,5 7,7 2,6 6,9 2,3 virginica 7,3 0,4 5,8 0,6 3,7 5 2 3,5 1 versicolor 0,0 0,0 1,0 0,3 1,1 5 2,3 3,3 1 versicolor 0,0 0,1 1,4 0,3 1,3 5,1 2,5 3 1,1 versicolor 0,0 0,3 2,3 0,2 1,6 4,9 2,4 3,3 1 versicolor 0,0 0,2 1,4 0,3 1,4 5,7 3,8 1,7 0,3 setosa 0,5 3,2 7,8 1,4 3,6 5,1 3,8 1,9 0,4 setosa 0,0 3,2 6,8 1,2 3,3 5,4 3,9 1,7 0,4 setosa 0,2 3,6 7,8 1,2 3,6 5,1 3,3 1,7 0,5 setosa 0,0 1,7 7,8 1,0 3,2 5,4 3,4 1,7 0,2 setosa 0,2 2,0 7,8 1,7 3,4 5,4 3,4 1,5 0,4 setosa 0,2 2,0 9,0 1,2 3,5 5 3,5 1,6 0,6 setosa 0,0 2,3 8,4 0,8 3,4 4,8 3,4 1,9 0,2 setosa 0,0 2,0 6,8 1,7 3,2 5 3,4 1,6 0,4 setosa 0,0 2,0 8,4 1,2 3,4 5,7 4,4 1,5 0,4 setosa 0,5 5,8 9,0 1,2 4,1 5,4 3,7 1,5 0,2 setosa 0,2 2,9 9,0 1,7 3,7 5 3 1,6 0,2 setosa 0,0 1,0 8,4 1,7 3,3 5,3 3,7 1,5 0,2 setosa 0,1 2,9 9,0 1,7 3,7 5,1 3,7 1,5 0,4 setosa 0,0 2,9 9,0 1,2 3,6 5,2 3,5 1,5 0,2 setosa 0,0 2,3 9,0 1,7 3,6 5,1 3,8 1,6 0,2 setosa 0,0 3,2 8,4 1,7 3,7 5,1 3,4 1,5 0,2 setosa 0,0 2,0 9,0 1,7 3,6 5,5 3,5 1,3 0,2 setosa 0,3 2,3 10,2 1,7 3,8 5,1 3,8 1,5 0,3 setosa 0,0 3,2 9,0 1,4 3,7 5,4 3,9 1,3 0,4 setosa 0,2 3,6 10,2 1,2 3,9 5,2 3,4 1,4 0,2 setosa 0,0 2,0 9,6 1,7 3,6 5 3,4 1,5 0,2 setosa 0,0 2,0 9,0 1,7 3,6 5,1 3,5 1,4 0,3 setosa 0,0 2,3 9,6 1,4 3,6 4,8 3,1 1,6 0,2 setosa 0,0 1,2 8,4 1,7 3,4 4,8 3,4 1,6 0,2 setosa 0,0 2,0 8,4 1,7 3,5 5,5 4,2 1,4 0,2 setosa 0,3 4,8 9,6 1,7 4,0 5,8 4 1,2 0,2 setosa 0,6 4,0 10,9 1,7 4,1 5,1 3,5 1,4 0,2 setosa 0,0 2,3 9,6 1,7 3,7 4,7 3,2 1,6 0,2 setosa 0,1 1,4 8,4 1,7 3,4 5 3,3 1,4 0,2 setosa 0,0 1,7 9,6 1,7 3,6 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 4,9 3,1 1,5 0,1 setosa 0,0 1,2 9,0 2,0 3,5 5,2 4,1 1,5 0,1 setosa 0,0 4,4 9,0 2,0 3,9 5 3,6 1,4 0,2 setosa 0,0 2,6 9,6 1,7 3,7 4,9 3 1,4 0,2 setosa 0,0 1,0 9,6 1,7 3,5 4,8 3 1,4 0,3 setosa 0,0 1,0 9,6 1,4 3,5 5 3,5 1,3 0,3 setosa 0,0 2,3 10,2 1,4 3,7 4,6 3,1 1,5 0,2 setosa 0,2 1,2 9,0 1,7 3,5 4,8 3 1,4 0,1 setosa 0,0 1,0 9,6 2,0 3,6 5 3,2 1,2 0,2 setosa 0,0 1,4 10,9 1,7 3,7 4,6 3,4 1,4 0,3 setosa 0,2 2,0 9,6 1,4 3,6 4,6 3,2 1,4 0,2 setosa 0,2 1,4 9,6 1,7 3,6 4,7 3,2 1,3 0,2 setosa 0,1 1,4 10,2 1,7 3,7 4,4 2,9 1,4 0,2 setosa 0,4 0,8 9,6 1,7 3,5 4,5 2,3 1,3 0,3 setosa 0,3 0,1 10,2 1,4 3,5 4,4 3 1,3 0,2 setosa 0,4 1,0 10,2 1,7 3,6 4,4 3,2 1,3 0,2 setosa 0,4 1,4 10,2 1,7 3,7 4,6 3,6 1 0,2 setosa 0,2 2,6 12,3 1,7 4,1 4,3 3 1,1 0,1 setosa 0,5 1,0 11,6 2,0 3,9 dari jarak diatas kita bisa mengambil sampel mengetahui data yang akan dicari seperti contoh soal berikut : sepal_length sepal_width petal_length petal_width species Sampel data 5 2 4,5 1,5 ? dan diketahui hasilnya sebagai berikut : K=5 D 1/D Setosa versicolor virginica 0,5 2 0 2 0 0,8 1,25 0 1,25 0 0,8 1,25 0 1,25 0 0,9 1,111111 0 1,111111 0 0,9 1,111111 0 0 1,111111 sum 0 5,611111 1,111111 dan dari data diatas, yang versi color lah yang lebih tinggi jadi dari pertanyaan nya isinya adalah VERSICOLOR sepal_length sepal_width petal_length petal_width species Sampel data 5 2 4,5 1,5 versicolor","title":"menghitung jarak"},{"location":"fuzzycmeans/","text":"IMPLEMENTASI FUZZY C-MEANS CLUSTERING DENGAN PYTHON \u00b6 PENGERTIAN FUZZY CLUSTERING \u00b6 Fuzzy clustering adalah proses menentukan derajat keanggotaan, dan kemudian menggunakannya dengan memasukkannya kedalam elemen data kedalam satu kelompok cluster atau lebih.Hal ini akan memberikan informasi kesamaan dari setiap objek. Satu dari sekian banyaknya algoritma fuzzy clustering yang digunakan adalah algoritma fuzzy clustering c means. Vektor dari fuzzy clustering, V={v1, v2, v3,\u2026., vc}, merupakan sebuah fungsi objektif yang didefinisikan dengan derajat keanggotaan dari Xj dan pusat cluster Vj. Algoritma fuzzy clustering c means membagi data yang tersedia dari setiap elemen data berhingga lalu memasukkannya kedalam bagian dari koleksi cluster yang dipengaruhi oleh beberapa kriteria yang diberikan. Berikan satu kumpulan data berhingga. X={x|,\u2026., xn} dan pusat data. Proses clustering pada dasarnya merupakan proses pembuatan himpunan yang memiliki anggota elemen-elemen yang akan dicluster. Pada algoritma clustering non\u2013fuzzy, nilai keanggotaan suatu elemen terhadap gugus atau cluster dinyatakan sebagai 0 atau 1, artinya setiap dokumen hanya bisa menjadi anggota satu cluster (1 sebagai anggota dan 0 bukan anggota). Padahal, jika informasi tentang data ditinjau kembali, satu data dapat menjadi anggota lebih dari satu cluster dengan derajat keanggotaan tertentu. Dengan fuzzy clustering, data dapat menjadi anggota beberapa cluster sekaligus. Dengan rumus : |(X1 \u2013 C1)|= |(X2\u2013 C1)|= Ket : X1 = data ke 1 Xi = data ke i C = (C1, C2) / kumpulan cluster C(n) = pusat cluster ke n U = (U11, U12) / Kumpulan derajat keanggotaan U(n) =Pusat derajat keanggotaan iterasi ke N ALGORITMA FUZZY C-MEANS CLUSTERING \u00b6 \\1. Menentukan Matriks X yang merupakan data yang akan dicluster, berukuran k x j, dengan k = jumlah data yang akan di-cluster dan j = jumlah variabel/atribut (kriteria). \\2. MenentukanJumlah cluster yang akan dibentuk (n >c \u2265 2). - pembobot (w > 1). - Maksimum iterasi (max n). - Kriteria penghentian/treshold (\u025b = nilai positif yang sangat kecil). - Menentukan fungsi obyektif awal (P0). \\3. Membentuk matriks partisi awal U (derajat keanggotaan dalam cluster) dengan ukuran k x i; matriks partisi biasanya dibuat acak, dengan k = jumlah data yang akan di-cluster dan i = jumlah cluster \\4. Hitung pusat cluster (V) untuk setiap cluster, menggunakan rumus Keterangan : Vij = pusat cluster pada cluster ke-i dan atribut ke-j. \u03bcik = data partisi (pada matriks U) pada cluster ke-i dan data ke-k. Xkj = data (pada matriks U) pada atribut ke-j dan data ke-k. w = pembobot \\5. Hitung nilai obyektif (Pn) dengan rumus : Keterangan : \u03bcik = data partisi (pada matriks U) pada cluster ke-i dan data ke-k. dik = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-i dan data ke-k. w = pembobot. Pn = nilai obyektif pada iterasi ke-n. \\6. Perbaiki derajat keanggotaan setiap data pada setiap cluster (perbaiki matriks partisi dengan : dengan : Keterangan : \u03bcik = data partisi (pada matriks U) pada pusat cluster ke-i dan data ke-k. dik = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-i dan data ke-k. djk = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-j dan data ke-k. w = pembobot. Xkj = data (pada matriks U) pada atribut ke-j dan data ke-k. \\7. Menghentikan iterasi jika pusat cluster V tidak berubah. Alternatif kriteria penghentian adalah jika perubahan nilai error kurang dari treshold |Pn - Pn-1| < \u025b. Alternatif adalah ketika perulangan melebihi maksimum iterasi ( n > max n). Jika iterasi belum berhenti, kembali ke langkah 4 \\8. Jika iterasi berhenti, ditentukan cluster dari tiap-tiap data. Cluster dipilih berdasarkan nilai matriks partisi terbesar. CONTOH MENGHITUNG PUSAT CLUSTER \u00b6 f1 f2 1 2 1 2 1 1 3 3 2 4 5 6 5 7 5 6 6 6 7 8 6 8 7 7 pada saat iterasi 0: c1 c2 1 0,363735 0,632653 2 0,558824 0,441176 3 0,571429 0,428571 4 0,180851 0,819149 5 0,283951 0,716049 6 0,880952 0,119048 7 0,619048 0,380952 8 0,583333 0,416667 mencari pusat clustering : c1 5,192956 4,624605 c2 4,771514 4,236214 update derajat keanggotaan : c1 c2 1 0,0361 0,03781 2 0.02806 0,02905 3 0,06736 0,07356 4 0,051975 0,031055 5 0,0634 0,027 6 0,100816 0,081757 7 0,04568 0,04241 8 0,0483 0,04451 CONTOH CODE C-MEANS CLUSTERING \u00b6 import random import csv list1 = [] with open ( 'Iris.csv' , 'r' ) as filecsv : datafile = csv . reader ( filecsv ) for data in datafile : list1 . append ( data ) print ( list1 ) c = len ( list1 [ 0 ]) r = len ( list1 ) clu = int ( input ( 'masukan banyak cluster : ' )) #Masukan data data = [] for i in range ( r - 1 ): temp_data = [] for j in range ( c ): temp_data . append ( float ( list1 [ i + 1 ][ 1 ])) temp_data . append ( float ( list1 [ i + 1 ][ 2 ])) temp_data . append ( float ( list1 [ i + 1 ][ 3 ])) temp_data . append ( float ( list1 [ i + 1 ][ 4 ])) data . append ( temp_data ) pangkat = int ( input ( 'masukan pangkat : ' )) #Random Cluster clu_random = [] for i in range ( r - 1 ): list = [] for j in range ( clu ): inp = random . randrange ( 1 , 10 ); list . append ( inp / 10 ) clu_random . append ( list ) stop = False no = 1 while not stop : print ( \"Iterasi Ke-\" , no ) #klas Clouster cluster = [] for i in range ( clu ): xy = [] for j in range ( c ): pembilang = [] penyebut = [] for k in range ( r - 1 ): hasil = data [ k ][ j ] * ( clu_random [ k ][ i ] ** pangkat ) hasil2 = clu_random [ k ][ i ] ** pangkat pembilang . append ( hasil ) penyebut . append ( hasil2 ) xy . append ( sum ( pembilang ) / sum ( penyebut )) cluster . append ( xy ) #mencari Centroid centroid = [] for i in range ( clu ): cent = [] for j in range ( r - 1 ): tampung = [] for k in range ( c ): hasil = data [ j ][ k ] - cluster [ i ][ k ] hasil = hasil ** 2 tampung . append ( hasil ) cent . append ( sum ( tampung ) ** ( 1 / 2 )) centroid . append ( cent ) #Update update = [] for i in range ( r - 1 ): niu = [] for j in range ( clu ): pembilang = ( 1 / centroid [ j ][ i ]) ** ( 1 / ( pangkat - 1 )) list_peny = [] for k in range ( clu ): penyebut = ( 1 / centroid [ k ][ i ]) ** ( 1 / ( pangkat - 1 )) list_peny . append ( penyebut ) niu . append ( pembilang / sum ( list_peny )) update . append ( niu ) #penampilan data asli print ( \"asli\" ) for i in range ( len ( data )): print ( data [ i ], ' ' , clu_random [ i ]) #penampilan data update print ( \"update\" ) for i in range ( len ( data )): print ( data [ i ], ' ' , update [ i ]) #pengecekan Treshold hasil = [] for i in range ( len ( update )): for j in range ( len ( update [ i ])): hasil . append ( abs ( update [ i ][ j ] - clu_random [ i ][ j ])) if ( sum ( hasil ) < 0.5 ): stop = True clu_random = update no = no + 1 print () MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"fuzzy_c_means"},{"location":"fuzzycmeans/#implementasi-fuzzy-c-means-clustering-dengan-python","text":"","title":"IMPLEMENTASI FUZZY C-MEANS CLUSTERING DENGAN PYTHON"},{"location":"fuzzycmeans/#pengertian-fuzzy-clustering","text":"Fuzzy clustering adalah proses menentukan derajat keanggotaan, dan kemudian menggunakannya dengan memasukkannya kedalam elemen data kedalam satu kelompok cluster atau lebih.Hal ini akan memberikan informasi kesamaan dari setiap objek. Satu dari sekian banyaknya algoritma fuzzy clustering yang digunakan adalah algoritma fuzzy clustering c means. Vektor dari fuzzy clustering, V={v1, v2, v3,\u2026., vc}, merupakan sebuah fungsi objektif yang didefinisikan dengan derajat keanggotaan dari Xj dan pusat cluster Vj. Algoritma fuzzy clustering c means membagi data yang tersedia dari setiap elemen data berhingga lalu memasukkannya kedalam bagian dari koleksi cluster yang dipengaruhi oleh beberapa kriteria yang diberikan. Berikan satu kumpulan data berhingga. X={x|,\u2026., xn} dan pusat data. Proses clustering pada dasarnya merupakan proses pembuatan himpunan yang memiliki anggota elemen-elemen yang akan dicluster. Pada algoritma clustering non\u2013fuzzy, nilai keanggotaan suatu elemen terhadap gugus atau cluster dinyatakan sebagai 0 atau 1, artinya setiap dokumen hanya bisa menjadi anggota satu cluster (1 sebagai anggota dan 0 bukan anggota). Padahal, jika informasi tentang data ditinjau kembali, satu data dapat menjadi anggota lebih dari satu cluster dengan derajat keanggotaan tertentu. Dengan fuzzy clustering, data dapat menjadi anggota beberapa cluster sekaligus. Dengan rumus : |(X1 \u2013 C1)|= |(X2\u2013 C1)|= Ket : X1 = data ke 1 Xi = data ke i C = (C1, C2) / kumpulan cluster C(n) = pusat cluster ke n U = (U11, U12) / Kumpulan derajat keanggotaan U(n) =Pusat derajat keanggotaan iterasi ke N","title":"PENGERTIAN FUZZY CLUSTERING"},{"location":"fuzzycmeans/#algoritma-fuzzy-c-means-clustering","text":"\\1. Menentukan Matriks X yang merupakan data yang akan dicluster, berukuran k x j, dengan k = jumlah data yang akan di-cluster dan j = jumlah variabel/atribut (kriteria). \\2. MenentukanJumlah cluster yang akan dibentuk (n >c \u2265 2). - pembobot (w > 1). - Maksimum iterasi (max n). - Kriteria penghentian/treshold (\u025b = nilai positif yang sangat kecil). - Menentukan fungsi obyektif awal (P0). \\3. Membentuk matriks partisi awal U (derajat keanggotaan dalam cluster) dengan ukuran k x i; matriks partisi biasanya dibuat acak, dengan k = jumlah data yang akan di-cluster dan i = jumlah cluster \\4. Hitung pusat cluster (V) untuk setiap cluster, menggunakan rumus Keterangan : Vij = pusat cluster pada cluster ke-i dan atribut ke-j. \u03bcik = data partisi (pada matriks U) pada cluster ke-i dan data ke-k. Xkj = data (pada matriks U) pada atribut ke-j dan data ke-k. w = pembobot \\5. Hitung nilai obyektif (Pn) dengan rumus : Keterangan : \u03bcik = data partisi (pada matriks U) pada cluster ke-i dan data ke-k. dik = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-i dan data ke-k. w = pembobot. Pn = nilai obyektif pada iterasi ke-n. \\6. Perbaiki derajat keanggotaan setiap data pada setiap cluster (perbaiki matriks partisi dengan : dengan : Keterangan : \u03bcik = data partisi (pada matriks U) pada pusat cluster ke-i dan data ke-k. dik = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-i dan data ke-k. djk = fungsi ukuran jarak untuk jarak Euclidean pada pusat cluster ke-j dan data ke-k. w = pembobot. Xkj = data (pada matriks U) pada atribut ke-j dan data ke-k. \\7. Menghentikan iterasi jika pusat cluster V tidak berubah. Alternatif kriteria penghentian adalah jika perubahan nilai error kurang dari treshold |Pn - Pn-1| < \u025b. Alternatif adalah ketika perulangan melebihi maksimum iterasi ( n > max n). Jika iterasi belum berhenti, kembali ke langkah 4 \\8. Jika iterasi berhenti, ditentukan cluster dari tiap-tiap data. Cluster dipilih berdasarkan nilai matriks partisi terbesar.","title":"ALGORITMA FUZZY C-MEANS CLUSTERING"},{"location":"fuzzycmeans/#contoh-menghitung-pusat-cluster","text":"f1 f2 1 2 1 2 1 1 3 3 2 4 5 6 5 7 5 6 6 6 7 8 6 8 7 7 pada saat iterasi 0: c1 c2 1 0,363735 0,632653 2 0,558824 0,441176 3 0,571429 0,428571 4 0,180851 0,819149 5 0,283951 0,716049 6 0,880952 0,119048 7 0,619048 0,380952 8 0,583333 0,416667 mencari pusat clustering : c1 5,192956 4,624605 c2 4,771514 4,236214 update derajat keanggotaan : c1 c2 1 0,0361 0,03781 2 0.02806 0,02905 3 0,06736 0,07356 4 0,051975 0,031055 5 0,0634 0,027 6 0,100816 0,081757 7 0,04568 0,04241 8 0,0483 0,04451","title":"CONTOH MENGHITUNG PUSAT CLUSTER"},{"location":"fuzzycmeans/#contoh-code-c-means-clustering","text":"import random import csv list1 = [] with open ( 'Iris.csv' , 'r' ) as filecsv : datafile = csv . reader ( filecsv ) for data in datafile : list1 . append ( data ) print ( list1 ) c = len ( list1 [ 0 ]) r = len ( list1 ) clu = int ( input ( 'masukan banyak cluster : ' )) #Masukan data data = [] for i in range ( r - 1 ): temp_data = [] for j in range ( c ): temp_data . append ( float ( list1 [ i + 1 ][ 1 ])) temp_data . append ( float ( list1 [ i + 1 ][ 2 ])) temp_data . append ( float ( list1 [ i + 1 ][ 3 ])) temp_data . append ( float ( list1 [ i + 1 ][ 4 ])) data . append ( temp_data ) pangkat = int ( input ( 'masukan pangkat : ' )) #Random Cluster clu_random = [] for i in range ( r - 1 ): list = [] for j in range ( clu ): inp = random . randrange ( 1 , 10 ); list . append ( inp / 10 ) clu_random . append ( list ) stop = False no = 1 while not stop : print ( \"Iterasi Ke-\" , no ) #klas Clouster cluster = [] for i in range ( clu ): xy = [] for j in range ( c ): pembilang = [] penyebut = [] for k in range ( r - 1 ): hasil = data [ k ][ j ] * ( clu_random [ k ][ i ] ** pangkat ) hasil2 = clu_random [ k ][ i ] ** pangkat pembilang . append ( hasil ) penyebut . append ( hasil2 ) xy . append ( sum ( pembilang ) / sum ( penyebut )) cluster . append ( xy ) #mencari Centroid centroid = [] for i in range ( clu ): cent = [] for j in range ( r - 1 ): tampung = [] for k in range ( c ): hasil = data [ j ][ k ] - cluster [ i ][ k ] hasil = hasil ** 2 tampung . append ( hasil ) cent . append ( sum ( tampung ) ** ( 1 / 2 )) centroid . append ( cent ) #Update update = [] for i in range ( r - 1 ): niu = [] for j in range ( clu ): pembilang = ( 1 / centroid [ j ][ i ]) ** ( 1 / ( pangkat - 1 )) list_peny = [] for k in range ( clu ): penyebut = ( 1 / centroid [ k ][ i ]) ** ( 1 / ( pangkat - 1 )) list_peny . append ( penyebut ) niu . append ( pembilang / sum ( list_peny )) update . append ( niu ) #penampilan data asli print ( \"asli\" ) for i in range ( len ( data )): print ( data [ i ], ' ' , clu_random [ i ]) #penampilan data update print ( \"update\" ) for i in range ( len ( data )): print ( data [ i ], ' ' , update [ i ]) #pengecekan Treshold hasil = [] for i in range ( len ( update )): for j in range ( len ( update [ i ])): hasil . append ( abs ( update [ i ][ j ] - clu_random [ i ][ j ])) if ( sum ( hasil ) < 0.5 ): stop = True clu_random = update no = no + 1 print () MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"CONTOH CODE C-MEANS CLUSTERING"}]}